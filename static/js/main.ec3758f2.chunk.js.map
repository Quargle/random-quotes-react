{"version":3,"sources":["QuoteBox.js","App.js","reportWebVitals.js","index.js"],"names":["QuoteBox","props","getQuotes","bind","getQuote","getRandomNumber","state","quotesData","currentQuote","quote","author","window","addEventListener","this","fetch","then","response","json","data","setState","quotes","console","log","catch","error","randomIndex","length","max","Math","floor","random","id","className","onClick","href","React","Component","App","target","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8QAkEeA,E,kDA9DX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,UAAY,EAAKA,UAAUC,KAAf,gBACjB,EAAKC,SAAW,EAAKA,SAASD,KAAd,gBAChB,EAAKE,gBAAkB,EAAKA,gBAAgBF,KAArB,gBACvB,EAAKG,MAAQ,CACXC,WAAY,GACZC,aAAc,CACZC,MAAO,GACPC,OAAQ,KATG,E,qDAcnB,WACEC,OAAOC,iBAAiB,OAAQC,KAAKX,a,uBAGvC,WAAa,IAAD,OACVY,MAAM,0IACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACJ,EAAKC,SAAS,CAACZ,WAAYW,EAAKE,SAChCC,QAAQC,IAAI,EAAKhB,MAAMC,YACvB,EAAKH,cAENmB,OAAM,SAAAC,GACLH,QAAQC,IAAIE,Q,sBAIhB,WACE,IAAMC,EAAcZ,KAAKR,gBAAgBQ,KAAKP,MAAMC,WAAWmB,QAC/DL,QAAQC,IAAR,kCAAuCG,IACvCZ,KAAKM,SAAS,CAACX,aAAcK,KAAKP,MAAMC,WAAWkB,O,6BAGrD,SAAgBE,GAEd,OADqBC,KAAKC,MAAMD,KAAKE,SAAWH,K,oBAIlD,WACI,IAAMlB,EAAQI,KAAKP,MAAME,aAAaC,MAChCC,EAASG,KAAKP,MAAME,aAAaE,OACvC,OACI,sBAAKqB,GAAG,YAAR,UACA,qBAAKA,GAAG,OAAR,SAAgBtB,IACd,sBAAKsB,GAAG,SAAR,iBAAsBrB,KACtB,sBAAKqB,GAAG,UAAR,UACE,wBAAQC,UAAU,SAASD,GAAG,YAAYE,QAASpB,KAAKT,SAAxD,uBACA,mBAAG4B,UAAU,SAASD,GAAG,cACzBG,KAAM,6DAA6DzB,EAAM,QAAQC,EADjF,6B,GApDOyB,IAAMC,WCadC,MAXf,WACE,OACE,sBAAKL,UAAU,MAAf,UACE,cAAC,EAAD,IACA,qBAAKD,GAAG,iBAAR,SACE,mBAAGA,GAAG,wBAAwBG,KAAK,uCAAuCI,OAAO,SAAjF,6BCEOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB1B,MAAK,YAAkD,IAA/C2B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.ec3758f2.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\n\r\nclass QuoteBox extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.getQuotes = this.getQuotes.bind(this);\r\n        this.getQuote = this.getQuote.bind(this);\r\n        this.getRandomNumber = this.getRandomNumber.bind(this);\r\n        this.state = {\r\n          quotesData: {},\r\n          currentQuote: {\r\n            quote: '',\r\n            author: ''\r\n          }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n      window.addEventListener('load', this.getQuotes);\r\n    }\r\n\r\n    getQuotes() {\r\n      fetch('https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json')\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        this.setState({quotesData: data.quotes});\r\n        console.log(this.state.quotesData);\r\n        this.getQuote();\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      })\r\n    }\r\n\r\n    getQuote() {\r\n      const randomIndex = this.getRandomNumber(this.state.quotesData.length);\r\n      console.log(`Random number selected: ${randomIndex}`)\r\n      this.setState({currentQuote: this.state.quotesData[randomIndex]})\r\n    }\r\n\r\n    getRandomNumber(max) {\r\n      const randomNumber = Math.floor(Math.random() * max);\r\n      return randomNumber;\r\n    }\r\n\r\n    render() {\r\n        const quote = this.state.currentQuote.quote;\r\n        const author = this.state.currentQuote.author\r\n        return (\r\n            <div id=\"quote-box\">\r\n            <div id=\"text\">{quote}</div>\r\n              <div id=\"author\"> -- {author}</div>\r\n              <div id=\"buttons\">\r\n                <button className=\"button\" id=\"new-quote\" onClick={this.getQuote}>New Quote</button>\r\n                <a className=\"button\" id=\"tweet-quote\"  \r\n                href={\"https://www.twitter.com/intent/tweet?hashtags=quotes&text=\"+quote+\"  -- \"+author}\r\n                >\r\n                  Tweet\r\n                </a>\r\n              </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default QuoteBox;","\nimport './App.css';\nimport QuoteBox from './QuoteBox.js';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <QuoteBox />\n      <div id=\"portfolio-link\">\n        <a id=\"portfolio-link-button\" href=\"https://quargle.github.io/Portfolio/\" target=\"_blank\">Portfolio</a>\n      </div>\n     </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}